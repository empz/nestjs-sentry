{"version":3,"file":"sentry.service.js","sourceRoot":"/","sources":["sentry.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, Logger, Optional } from '@nestjs/common';\nimport { Options, Client } from '@sentry/types';\nimport * as Sentry from '@sentry/node';\n\nimport { SENTRY_MODULE_OPTIONS } from './sentry.constants';\nimport { SentryModuleOptions } from './sentry.interfaces';\n\n@Injectable()\nexport class SentryService extends Logger {\n    app: string = '@ntegral/nestjs-sentry: ';\n    private static serviceInstance: SentryService;\n    constructor(\n        @Inject(SENTRY_MODULE_OPTIONS)\n        private readonly options?: SentryModuleOptions,\n        @Optional() prior?: SentryService\n      ) {\n        super();\n        if (!(options && options.dsn)) {\n          // console.log('options not found. Did you use SentryModule.forRoot?');\n          return;\n        }\n        const { debug, integrations = [], ...sentryOptions } = options;\n        Sentry.init({\n          ...sentryOptions,\n          integrations: [\n            new Sentry.Integrations.OnUncaughtException({\n              onFatalError: (async (err) => {\n                // console.error('uncaughtException, not cool!')\n                // console.error(err);\n                if (err.name === 'SentryError') { console.log(err); } else { (Sentry.getCurrentHub().getClient<Client<Options>>() as Client<Options>).captureException(err); process.exit(1); }\n              }),\n            }),\n            new Sentry.Integrations.OnUnhandledRejection({mode: 'warn'}),\n            ...integrations\n          ]\n        });\n      }\n\n  public static SentryServiceInstance(): SentryService {\n    if (!SentryService.serviceInstance) {\n      SentryService.serviceInstance = new SentryService();\n    }\n    return SentryService.serviceInstance;\n  }\n\n  log(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      super.log(message, context);\n      Sentry.addBreadcrumb({\n        message,\n        level: Sentry.Severity.Log,\n        data: {\n          context\n        }\n      })\n    } catch (err) {  }\n  }\n\n  error(message: string, trace?: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      super.error(message, trace, context);\n      Sentry.captureMessage(message, Sentry.Severity.Error);\n    } catch (err) {  }\n  }\n\n  warn(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      super.warn(message, context);\n      Sentry.addBreadcrumb({\n        message,\n        level: Sentry.Severity.Warning,\n        data: {\n          context\n        }\n      })\n    } catch (err) {  }\n  }\n\n  debug(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      super.debug(message, context);\n      Sentry.addBreadcrumb({\n        message,\n        level: Sentry.Severity.Debug,\n        data: {\n          context\n        }\n      })\n    } catch (err) {  }\n  }\n\n  verbose(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      super.verbose(message, context);\n      \n      Sentry.addBreadcrumb({\n        message,\n        level: Sentry.Severity.Debug,\n        data: {\n          context\n        }\n      })\n    } catch (err) {  }\n  }\n\n  instance() {\n    return Sentry;\n  }\n}"]}